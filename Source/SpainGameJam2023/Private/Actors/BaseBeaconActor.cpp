// All code generated by Aleix Rius for the Indie Spain Dev 2023. The code is delivered as is.


#include "Actors/BaseBeaconActor.h"
#include "Actors/GameplayManager.h"
#include "GameInstanceManagers.h"
#include "Components/BuildingEnergyNode.h"

ABaseBeaconActor::ABaseBeaconActor()
{
	energyNode = CreateDefaultSubobject< UBuildingEnergyNode>("Energy node");
}

void ABaseBeaconActor::BeginPlay()
{
	Super::BeginPlay();
	if (!GetWorld())return;

	if (auto gameInstance = Cast<UGameInstanceManagers>(GetGameInstance()))
	{
		if (auto gameplayManager = gameInstance->GetGameplaymanager())
		{
			gameplayManager->PlayerStructureCreated(this);
		}
	}

}

void ABaseBeaconActor::BeginDestroy()
{
	if (GetWorld()) {

		if (auto gameInstance = Cast<UGameInstanceManagers>(GetGameInstance()))
		{
			if (auto gameplayManager = gameInstance->GetGameplaymanager())
			{
				gameplayManager->PlayerStructureDestroyed(this);
			}
		}
	}

	Super::BeginDestroy();
}

bool ABaseBeaconActor::IsActive() const
{
	return energyNode->GetNodeEnergy() >= 0.f;
}

void ABaseBeaconActor::DealDamage_Implementation(float ammount) const
{

}

void ABaseBeaconActor::ReceiveDamage_Implementation(float ammount)
{
	combatStats.health -= ammount;
	if (combatStats.health <= 0)
	{
		Destroy();
	}
}

void ABaseBeaconActor::GetCombatStats_Implementation(FCombatStats& out) const
{
	out = combatStats;
}

void ABaseBeaconActor::SetCombatStats_Implementation(const FCombatStats& stats)
{
	combatStats = stats;
}
