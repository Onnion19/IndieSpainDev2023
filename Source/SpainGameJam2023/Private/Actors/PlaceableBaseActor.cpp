// All code generated by Aleix Rius for the Indie Spain Dev 2023. The code is delivered as is.


#include "Actors/PlaceableBaseActor.h"
#include "Components/BoxComponent.h"
#include "Actors/BuildingPawn.h"
#include "Kismet/GameplayStatics.h"
// Sets default values
APlaceableBaseActor::APlaceableBaseActor()
{
 	// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.
	PrimaryActorTick.bCanEverTick = true;

	// Turret Bulding collider
	buildingCollider = CreateDefaultSubobject<UBoxComponent>("BuldingCollider");
	buildingCollider->AttachToComponent(RootComponent, FAttachmentTransformRules{ EAttachmentRule::KeepRelative, false });
	buildingCollider->SetCollisionProfileName({ "ConstructionBuilding" });
	buildingCollider->OnBeginCursorOver.AddDynamic(this, &APlaceableBaseActor::OnMouseOver);
	RootComponent = buildingCollider;

}

// Called when the game starts or when spawned
void APlaceableBaseActor::BeginPlay()
{
	Super::BeginPlay();
	
}

void APlaceableBaseActor::OnMouseOver(UPrimitiveComponent* TouchedComponent)
{
	auto world = GetWorld();
	if (!world)return;
	if (auto pawn = Cast<ABuildingPawn>(UGameplayStatics::GetPlayerPawn(world, 0)))
	{
		pawn->SelectActor(this);
	}
}

// Called every frame
void APlaceableBaseActor::Tick(float DeltaTime)
{
	Super::Tick(DeltaTime);

}

