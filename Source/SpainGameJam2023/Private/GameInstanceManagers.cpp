// All code generated by Aleix Rius for the Indie Spain Dev 2023. The code is delivered as is.


#include "GameInstanceManagers.h"
#include "Energy/EnergyManager.h"
#include "HUD/HUDManager.h"
#include "TurretsManager.h"
#include "Actors/GameplayManager.h"
#include "Kismet/GameplayStatics.h"

void UGameInstanceManagers::CreateEnergyManager()
{
	energyManager = NewObject<UEnergyManager>(this, { "Energy Managaer" });
	ensureMsgf(energyManager, TEXT("Error generating energy manager"));
}

void UGameInstanceManagers::CreateTurretsManager()
{
	turretsManager = NewObject<UTurretsManager>(this, { "Turrets Manager" });
	ensureMsgf(turretsManager, TEXT("Turrets manager could not be generated"));
}


void UGameInstanceManagers::Init()
{
	CreateEnergyManager();
	CreateTurretsManager();
	Super::Init();
}

AHUDManager* UGameInstanceManagers::GetHudManager() const
{
	if (auto controller = UGameplayStatics::GetPlayerController(this, 0))
		return controller->GetHUD<AHUDManager>();

	return nullptr;
}

void UGameInstanceManagers::ChangeGameStage(EGameModeStage newStage)
{
	if (newStage == stage) return;

	stage = newStage;
	energyManager->OnChangeGameStage(stage);
	turretsManager->OnChangeGameStage(stage);
	if (auto hudManager = GetHudManager())hudManager->ChangeStage(stage);

	if (gameplayManager) {
		gameplayManager->OnChangeGameStage(stage);
	}

	OnChangeGameStage.Broadcast(newStage);
}

void UGameInstanceManagers::Defeat()
{
	OnGameOver.Broadcast();
}

void UGameInstanceManagers::Win()
{
	OnVictory.Broadcast();
}
