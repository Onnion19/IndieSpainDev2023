// All code generated by Aleix Rius for the Indie Spain Dev 2023. The code is delivered as is.

#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Actor.h"
#include "BaseBuildingActor.generated.h"

UCLASS()
class SPAINGAMEJAM2023_API ABaseBuildingActor : public AActor
{
	GENERATED_BODY()
	
public:	
	// Sets default values for this actor's properties
	ABaseBuildingActor();

protected:
	// Called when the game starts or when spawned
	virtual void BeginPlay() override;

	UFUNCTION()
	void OnOverlapBuilding(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult& SweepResult);

	UFUNCTION()
	void OnStopOverlapBuilding(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
public:	
	// Called every frame
	virtual void Tick(float DeltaTime) override;

	UFUNCTION(BlueprintCallable)
	bool CanBePlaced() const { return bIsPlaceble; }

protected: 

	UPROPERTY(EditAnywhere, BlueprintReadOnly, Category="Colliders")
	class UBoxComponent* buildingCollider;

	UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = "Visualization")
	class UStaticMeshComponent* meshComponent;

	UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = "Visualization")
	UMaterial* material;

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category = "Visualization")
	UMaterialInstanceDynamic* materialInstance;

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category = "Colliders")
	bool bIsPlaceble = true;

private: 

	inline static const FName materialColorVariable{ "Color" };
};
