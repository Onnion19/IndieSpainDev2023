// All code generated by Aleix Rius for the Indie Spain Dev 2023. The code is delivered as is.

#pragma once

#include "CoreMinimal.h"
#include "UObject/NoExportTypes.h"
#include "BaseCodeNode.generated.h"


/**
 * Not use UE c++ but standard and build different templated stuff
 * Where we have: 
 *		- Base Node -> Execute( std::function)
 *		- Check Node -> bool Execute(std::function)
 *			Depending on the type of check: 
 *					- Turret check std::enable_if<eType = turret>
 *					- Enemies check
 *					- Environemnt check std.:enable  
 *					-  each one will specify different input parameters inside the functor.
 *					- IF this doesn't work, it could work with std::variant where it handles all possible types and the caller is responsible to ensure it works
 */
UCLASS(Blueprintable)
class SPAINGAMEJAM2023_API UBaseCodeNode : public UObject
{
	GENERATED_BODY()

public:

	UFUNCTION(BlueprintNativeEvent)
	UBaseCodeNode* Execute();
	UBaseCodeNode* Execute_Implementation();


	UFUNCTION(BlueprintCallable)
	void SetNextNode(UBaseCodeNode* node);

protected:

	UPROPERTY(BlueprintReadOnly, VisibleAnywhere)
	UBaseCodeNode* nextNode = nullptr;
};
