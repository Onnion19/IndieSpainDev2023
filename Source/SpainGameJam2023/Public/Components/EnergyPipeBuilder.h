// All code generated by Aleix Rius for the Indie Spain Dev 2023. The code is delivered as is.

#pragma once

#include "CoreMinimal.h"
#include "Components/ActorComponent.h"
#include <tuple>
#include "EnergyPipeBuilder.generated.h"


UCLASS( ClassGroup=(Custom), meta=(BlueprintSpawnableComponent) )
class SPAINGAMEJAM2023_API UEnergyPipeBuilder : public UActorComponent
{
	GENERATED_BODY()

public:	
	// Sets default values for this component's properties
	UEnergyPipeBuilder();

	UFUNCTION(BlueprintCallable)
	void RebuildPipeGraphFromNode(class UBuildingEnergyNode* node, TArray<class UBuildingEnergyNode*> nodesToConnect);

	UFUNCTION(BlueprintCallable)
	void ClearGraphFrom(class UBuildingEnergyNode* node, bool clearPipes = false);

protected: 

	std::tuple<class UBuildingEnergyNode*, class UBuildingEnergyNode*> FindNextNodeToConnect(const TArray<class UBuildingEnergyNode*>& connectedNodes, const TArray<class UBuildingEnergyNode*>& nodesToConnect);

	void BuildGraphFromNode(class UBuildingEnergyNode* node, TArray<class UBuildingEnergyNode*>& nodesToConnect);

	UFUNCTION(BlueprintCallable)
	void BuildPipeFromNode(class UBuildingEnergyNode* from, class UBuildingEnergyNode* to);

	void ClearGraphFrom(class ABaseEnergyPipe* node);

	class ABaseEnergyPipe* GetOrCreateUnusedPipe();

	class ABaseEnergyPipe* CreateNewPipe();

	std::tuple<class UBuildingEnergyNode*, float> FindClosestNodeFrom(class UBuildingEnergyNode* node, const TArray<class UBuildingEnergyNode*>& candidates);

	void CleanUnusedPipes();

protected: 

	UPROPERTY(BlueprintReadOnly, EditAnywhere)
	float zOffset;

	UPROPERTY(BlueprintReadOnly, EditAnywhere)
	TSubclassOf<class ABaseEnergyPipe> pipeType;

	UPROPERTY(BlueprintReadOnly, VisibleAnywhere)
	TArray<class ABaseEnergyPipe*> pipes;

	UPROPERTY()
	TArray<class ABaseEnergyPipe*> unusedPipes;
};
